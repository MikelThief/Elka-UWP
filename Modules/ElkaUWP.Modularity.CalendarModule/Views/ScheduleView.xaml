<Page
    x:Class="ElkaUWP.Modularity.CalendarModule.Views.ScheduleView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:converters="using:Microsoft.Toolkit.Uwp.UI.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:entities="using:ElkaUWP.DataLayer.Propertiary.Entities"
    xmlns:infrastructure="using:ElkaUWP.Infrastructure"
    xmlns:input="using:Telerik.UI.Xaml.Controls.Input"
    xmlns:local="using:ElkaUWP.Modularity.CalendarModule.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sfcontrols="using:Syncfusion.UI.Xaml.Schedule"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    mc:Ignorable="d">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ms-appx:///ElkaUWP.Infrastructure/ResourceDictionaries/Resources.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converters:StringFormatConverter x:Key="StringFormatConverter" />
        </ResourceDictionary>
    </Page.Resources>

    <Grid Name="MasterRegion">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid Name="CommandsRegion" Grid.Row="0">
            <CommandBar
                x:Name="SummaryCommandBar"
                Margin="0,0,0,12"
                DefaultLabelPosition="Bottom"
                IsDynamicOverflowEnabled="True"
                OverflowButtonVisibility="Auto"
                Style="{StaticResource TopCommandBar}">
                <CommandBar.Content>
                    <TextBlock
                        Margin="24,4,0,0"
                        VerticalAlignment="Center"
                        FontSize="20"
                        FontWeight="Light"
                        Text="{x:Bind ViewModel.CurrentMonthAndYear, Mode=OneWay}"
                        TextTrimming="CharacterEllipsis" />
                </CommandBar.Content>
                <AppBarButton x:Uid="CalendarGoBackwardButton" Click="CalendarGoBackwardButton_OnClick">
                    <AppBarButton.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE76B;" />
                    </AppBarButton.Icon>
                </AppBarButton>
                <AppBarButton x:Uid="CalendarGoForwardButton" Click="CalendarGoForwardButton_OnClick">
                    <AppBarButton.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE76C;" />
                    </AppBarButton.Icon>
                </AppBarButton>
                <AppBarSeparator />
                <AppBarButton
                    x:Uid="SummaryAddButton"
                    AllowFocusOnInteraction="True"
                    Icon="Add">
                    <AppBarButton.Flyout>
                        <Flyout x:Name="CreateDeadlineFlyout">
                            <Flyout.FlyoutPresenterStyle>
                                <Style TargetType="FlyoutPresenter">
                                    <Setter Property="Background" Value="{ThemeResource SystemControlAcrylicElementMediumHighBrush}" />
                                </Style>
                            </Flyout.FlyoutPresenterStyle>
                            <StackPanel Orientation="Vertical" Spacing="15">
                                <TextBlock Style="{StaticResource SubtitleTextBlockStyle}" Text="Create new deadline" />
                                <StackPanel
                                    HorizontalAlignment="Center"
                                    Orientation="Vertical"
                                    Spacing="8">
                                    <input:RadDatePicker
                                        Name="CreateDeadlineFlyoutDatePicker"
                                        x:Uid="CreateDeadlineFlyoutDatePicker"
                                        HorizontalAlignment="Stretch"
                                        Value="{x:Bind ViewModel.CreateDeadlineFlyoutDateTime, Mode=TwoWay}" />
                                    <TextBox
                                        x:Name="CreateDeadlineFlyoutTitle"
                                        x:Uid="CreateDeadlineFlyoutTitle"
                                        HorizontalAlignment="Stretch"
                                        MaxLength="10"
                                        Text="{x:Bind ViewModel.CreateDeadlineFlyOutTitle, Mode=TwoWay}" />
                                    <TextBox
                                        x:Name="CreateDeadlineFlyoutDescription"
                                        x:Uid="CreateDeadlineFlyoutHeader"
                                        MaxLength="18"
                                        Text="{x:Bind ViewModel.CreateDeadlineFlyoutDescription, Mode=TwoWay}" />
                                    <StackPanel
                                        HorizontalAlignment="Center"
                                        Orientation="Horizontal"
                                        Spacing="10">
                                        <Button
                                            MinWidth="120"
                                            MinHeight="35"
                                            Click="CreateEventButton_Click"
                                            Command="{x:Bind ViewModel.CreateEventCommand}"
                                            Content="Create" />
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>
                        </Flyout>
                    </AppBarButton.Flyout>
                </AppBarButton>
                <AppBarToggleButton
                    x:Uid="SummaryDownloadButton"
                    Icon="Download"
                    IsChecked="{x:Bind ViewModel.IsScheduleAutoDownloadEnabled, Mode=TwoWay}" />
            </CommandBar>
        </Grid>
        <Grid Name="ContentRegion" Grid.Row="1">
            <ScrollViewer Grid.Row="0" VerticalScrollBarVisibility="Auto">
                <Grid x:Name="ScheduleRegion">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition x:Name="SecondColumn" />
                    </Grid.ColumnDefinitions>
                    <sfcontrols:SfSchedule
                        x:Name="Schedule"
                        MinWidth="1"
                        MinHeight="1"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        AppointmentEditorOpening="CurrentWeekSchedule_AppointmentEditorOpening"
                        EnableAutoFormat="True"
                        EnableNavigation="True"
                        FirstDayOfWeek="Monday"
                        ItemsSource="{x:Bind ViewModel.CalendarEvents, Mode=TwoWay}"
                        MajorTickTimeFormat="HH:mm"
                        ScheduleTapped="Schedule_OnScheduleTapped"
                        ScheduleType="WorkWeek"
                        ShowAllDay="False"
                        TimeInterval="OneHour"
                        WorkEndHour="19"
                        WorkStartHour="8">
                        <sfcontrols:SfSchedule.AppointmentTemplate>
                            <DataTemplate x:DataType="entities:CalendarEvent">
                                <Grid Padding="4" Background="{x:Bind Background, Mode=OneWay}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <TextBlock
                                        Grid.Row="0"
                                        HorizontalAlignment="Center"
                                        FontWeight="Bold"
                                        Text="{x:Bind Subject, Mode=OneWay}" />
                                    <TextBlock
                                        Grid.Row="1"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        FontWeight="Light"
                                        Text="{Binding CalendarEventType}" />
                                    <TextBlock
                                        Grid.Row="2"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        FontWeight="Light"
                                        Text="{x:Bind Location, Mode=OneWay}" />
                                </Grid>
                            </DataTemplate>
                        </sfcontrols:SfSchedule.AppointmentTemplate>
                        <sfcontrols:SfSchedule.AppointmentMapping>
                            <sfcontrols:ScheduleAppointmentMapping
                                AppointmentBackgroundMapping="Background"
                                EndTimeMapping="EndTime"
                                LocationMapping="Location"
                                NotesMapping="Notes"
                                StartTimeMapping="StartTime"
                                SubjectMapping="Subject" />
                        </sfcontrols:SfSchedule.AppointmentMapping>
                        <sfcontrols:SfSchedule.ScheduleHeaderStyle>
                            <sfcontrols:ScheduleHeaderStyle HeaderHeight="0" />
                        </sfcontrols:SfSchedule.ScheduleHeaderStyle>
                    </sfcontrols:SfSchedule>
                    <Grid Name="SideRegion" Grid.Row="0">
                        <StackPanel Orientation="Vertical" Spacing="32">
                            <controls:HeaderedContentControl
                                Name="DeadlineListHeader"
                                x:Uid="DeadlineListHeader"
                                HorizontalAlignment="Stretch"
                                HorizontalContentAlignment="Stretch"
                                FontSize="15">
                                <controls:AdaptiveGridView
                                    x:Name="DeadlineListGrid"
                                    ItemsSource="{x:Bind ViewModel.UserDeadlines}"
                                    SelectionMode="None">
                                    <controls:AdaptiveGridView.ItemContainerStyle>
                                        <Style TargetType="FrameworkElement">
                                            <Setter Property="Margin" Value="0,2,4,2" />
                                        </Style>
                                    </controls:AdaptiveGridView.ItemContainerStyle>
                                    <controls:AdaptiveGridView.ItemTemplate>
                                        <DataTemplate x:DataType="entities:UserDeadline">
                                            <Grid Padding="4,2,4,2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="144" />
                                                    <ColumnDefinition Width="40" />
                                                </Grid.ColumnDefinitions>
                                                <StackPanel
                                                    Grid.Column="0"
                                                    HorizontalAlignment="Left"
                                                    Orientation="Vertical">
                                                    <TextBlock Text="{x:Bind Header}" TextWrapping="WrapWholeWords" />
                                                    <TextBlock Text="{x:Bind Date, Converter={StaticResource StringFormatConverter}, ConverterParameter='{}{0:dd/MM/yyyy}'}" />
                                                    <TextBlock
                                                        Foreground="DarkGray"
                                                        Text="{x:Bind Description}"
                                                        TextWrapping="WrapWholeWords" />
                                                </StackPanel>
                                                <Button
                                                    Grid.Column="1"
                                                    HorizontalAlignment="Right"
                                                    Background="Transparent"
                                                    Command="{Binding ElementName=DeadlineListGrid, Path=DataContext.RemoveUserDeadlineCommand}"
                                                    CommandParameter="{Binding}">
                                                    <SymbolIcon Symbol="Delete" />
                                                </Button>
                                            </Grid>
                                        </DataTemplate>
                                    </controls:AdaptiveGridView.ItemTemplate>
                                </controls:AdaptiveGridView>
                            </controls:HeaderedContentControl>
                            <controls:HeaderedContentControl
                                Name="CalendarLinksHeader"
                                x:Uid="CalendarLinksHeader"
                                FontSize="15">
                                <StackPanel
                                    VerticalAlignment="Top"
                                    Orientation="Vertical"
                                    Spacing="10">
                                    <HyperlinkButton
                                        Name="ICalHyperLinkButton"
                                        IsEnabled="False"
                                        NavigateUri="{x:Bind ViewModel.ICalFileHyperlink}">
                                        <HyperlinkButton.Content>
                                            <TextBlock x:Uid="ICalHyperLink" FontSize="15" />
                                        </HyperlinkButton.Content>
                                    </HyperlinkButton>
                                    <HyperlinkButton Name="WebCalHyperLinkButton" NavigateUri="{x:Bind ViewModel.WebCalUrlTaskNotifier.Result, Mode=OneWay}">
                                        <HyperlinkButton.Content>
                                            <TextBlock x:Uid="WebCalHyperLink" FontSize="15" />
                                        </HyperlinkButton.Content>
                                    </HyperlinkButton>
                                </StackPanel>
                            </controls:HeaderedContentControl>
                        </StackPanel>
                    </Grid>
                </Grid>
            </ScrollViewer>
        </Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="WidthStateGroup">
                <VisualState x:Name="LargeWidthState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="ScheduleRegion.Margin" Value="{StaticResource MediumLeftRightMargin}" />
                        <Setter Target="SecondColumn.Width" Value="250" />

                        <Setter Target="SideRegion.Margin" Value="32,0,20,0" />
                        <Setter Target="SideRegion.(Grid.Column)" Value="1" />
                        <Setter Target="SideRegion.(Grid.Row)" Value="0" />

                        <Setter Target="SummaryCommandBar.DefaultLabelPosition" Value="Right" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="SmallWidthState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource SmallWindowSnapPoint}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ScheduleRegion.Margin" Value="{StaticResource SmallLeftRightMargin}" />
                        <Setter Target="SecondColumn.(Width)" Value="0" />

                        <Setter Target="SideRegion.(Grid.Column)" Value="0" />
                        <Setter Target="SideRegion.(Grid.Row)" Value="1" />
                        <Setter Target="SideRegion.Margin" Value="0,24,0,0" />

                        <Setter Target="SummaryCommandBar.DefaultLabelPosition" Value="Bottom" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="HeightStateGroup">
                <!--
                    SfSchedule size is NumberOfCells*IntervalHeight + 40 (Days Header) + Allday header (if visible).
                    Its content becomes invisible if Schedule is given more vertical space than it requires.
                    User has to manipulate the width or height of schedule to let it catch up with showing content.
                    Height should be then set to amount of required space -1
                -->
                <VisualState x:Name="XXXXXXXXLHeightState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="1270" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Schedule.Height" Value="1084" />
                        <Setter Target="Schedule.IntervalHeight" Value="95" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="XXXXXXXLHeightState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="1210" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Schedule.Height" Value="1024" />
                        <Setter Target="Schedule.IntervalHeight" Value="90" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="XXXXXXLHeightState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="1150" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Schedule.Height" Value="974" />
                        <Setter Target="Schedule.IntervalHeight" Value="85" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="XXXXXLHeightState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="1090" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Schedule.Height" Value="919" />
                        <Setter Target="Schedule.IntervalHeight" Value="80" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="XXXXLHeightState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="1030" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Schedule.Height" Value="864" />
                        <Setter Target="Schedule.IntervalHeight" Value="75" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="XXXLHeightState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="970" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Schedule.Height" Value="809" />
                        <Setter Target="Schedule.IntervalHeight" Value="70" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="XXLHeightState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="910" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Schedule.Height" Value="754" />
                        <Setter Target="Schedule.IntervalHeight" Value="65" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="XLHeightState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="850" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Schedule.Height" Value="699" />
                        <Setter Target="Schedule.IntervalHeight" Value="60" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="LHeightState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="790" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Schedule.Height" Value="644" />
                        <Setter Target="Schedule.IntervalHeight" Value="55" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="MHeightState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="730" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Schedule.Height" Value="589" />
                        <Setter Target="Schedule.IntervalHeight" Value="50" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="SHeightState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="670" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Schedule.Height" Value="534" />
                        <Setter Target="Schedule.IntervalHeight" Value="45" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="XSmHeightState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="610" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Schedule.IntervalHeight" Value="40" />
                        <Setter Target="Schedule.Height" Value="479" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="XXSHeightState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="550" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Schedule.IntervalHeight" Value="35" />
                        <Setter Target="Schedule.Height" Value="424" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="XXXSHeightState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Schedule.IntervalHeight" Value="30" />
                        <Setter Target="Schedule.Height" Value="369" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>

</Page>
